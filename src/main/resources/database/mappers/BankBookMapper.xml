<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
  <mapper namespace="com.iu.s1.bankBook.BankBookDAO">
  	  
  	<sql id="searchCondition">
  			<if test="kind == 'contents'">
	  			WHERE BOOKDETAIL LIKE '%' || #{search} || '%' 
	  		</if>
	  		
	  		<if test="kind == 'title'">
	  			WHERE BOOKNUMBER LIKE '%' || #{search} || '%' 
	  		</if>
  	
  	</sql>
  
  	<sql id="searchCondition2">
  	 
  		WHERE	
			<choose>
				<when test="kind == 'contents'">
					BOOKDETAIL
				</when>
				<otherwise>
					BOOKNAME
				</otherwise>
			</choose>
			
					LIKE '%' || #{search} || '%'
  	
  	
  	
  	</sql>
  
	  	<select id="getBankBookCount" parameterType="Pager" resultType="Long">
	  		SELECT COUNT(BOOKNUMBER)FROM BANKBOOK
	  		 
	  		<if test="kind == 'contents'">
	  			WHERE BOOKDETAIL LIKE '%' || #{search} || '%' 
	  		</if>
	  		
	  		<if test="kind == 'title'">
	  			WHERE BOOKNUMBER LIKE '%' || #{search} || '%' 
	  		</if>
	  			
	  	</select>
  
  
   	<select id="getBankBookNumber" resultType="Long" >
  		SELECT BANKBOOK_SEQ.NEXTVAL FROM DUAL
  	</select>
  	      
  	 <!-- paging처리 쿼리문 -->     
    <select id="getBankBookList" parameterType="Pager" resultType="BankBookDTO">
	    SELECT * FROM
			(
				SELECT ROWNUM R, B.* FROM  
				(
					SELECT * FROM BANKBOOK
			  	
					ORDER BY BOOKNUMBER DESC
				) B
			)
		WHERE R BETWEEN #{startRow} AND #{lastRow} 
    </select>
  	
  	<select id="getBankBookDetail" parameterType="BankBookDTO" resultType="BankBookDTO" resultMap="BankBookDetailResult">
  		SELECT * 
  			FROM BANKBOOK 
			LEFT OUTER JOIN 
			BANKBOOKIMG 
			USING (BOOKNUMBER)
		WHERE BOOKNUMBER = #{bookNumber}
  	</select>
  	
  	<resultMap type="BankBookDTO" id="BankBookDetailResult">
  		<!-- Primary Key -->
  		<id column="BOOKNUMBER" property="bookNumber"/>
  		<!-- Primary Key를 제외한 그외 나머지 property에는 setter -->
  		<result column="BOOKNAME" property="bookName"/>
  		<result column="BOOKDETAIL" property="bookDetail"/>
  		<result column="BOOKRATE" property="bookRate"/>
  		<result column="BOOKSALE" property="bookSale"/>
  		<!-- 1:1 -->
  		<association property="bankBookImgDTO" javaType="BankBookImgDTO">
  			<id column="FILENUM" property="fileNum"/>
  		<!-- BOOKNUMBER는 BANKBOOKDTO에서 가져오므로 생략가능 써도되긴함	<result column="BOOKNUMBER" property="bookNumber"/> -->
  			<result column="FILENAME" property="fileName"/>
  			<result column="ORINAME" property="oriName"/>
  		</association>
  		<!-- 1:N -->
  		<!-- <collection property=""></collection> -->
  	</resultMap>
  	
  
  	<insert id="setBankBookAdd" parameterType="BankBookDTO">
  		<selectKey keyProperty="bookNumber" resultType="Long" order="BEFORE">
  			SELECT BANKBOOK_SEQ.NEXTVAL FROM DUAL
  		</selectKey>
  		INSERT INTO BANKBOOK 
  		VALUES (#{bookNumber}, #{bookName}, #{bookRate}, #{bookSale}, #{bookDetail})
  	</insert>
  	
  	<delete id="setBankBookDelete" parameterType="Long">
  		DELETE BANKBOOK WHERE BOOKNUMBER=#{bookNumber}
  	</delete>
  
	<update id="setBankBookUpdate" parameterType="BankBookDTO">
		UPDATE BANKBOOK 
		SET BOOKNAME=#{bookName}, BOOKRATE=#{bookRate}, BOOKSALE=#{bookSale}, BOOKDETAIL=#{bookDetail}
		WHERE BOOKNUMBER=#{bookNumber}
	</update>  
	
	<insert id="setBankBookImg" parameterType="BankBookImgDTO">
		INSERT INTO BANKBOOKIMG
		VALUES (BANKBOOK_SEQ.NEXTVAL, #{bookNumber},#{fileName},#{oriName})
	</insert>
	
	
	
  </mapper>